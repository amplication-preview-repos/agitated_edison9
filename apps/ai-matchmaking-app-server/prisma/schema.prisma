datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

generator client {
  provider = "prisma-client-js"
}

model ParticipantSummary {
  createdAt     DateTime     @default(now())
  embeddings    Json?
  id            String       @id @default(cuid())
  participant   Participant? @relation(fields: [participantId], references: [id])
  participantId String?
  summary       String?
  updatedAt     DateTime     @updatedAt
}

model Conference {
  activities  Activity[]
  createdAt   DateTime   @default(now())
  date        DateTime?
  description String?
  id          String     @id @default(cuid())
  name        String?
  speakers    Speaker[]
  updatedAt   DateTime   @updatedAt
}

model Activity {
  activitySummaries ActivitySummary[]
  conference        Conference?       @relation(fields: [conferenceId], references: [id])
  conferenceId      String?
  createdAt         DateTime          @default(now())
  description       String?
  id                String            @id @default(cuid())
  name              String?
  updatedAt         DateTime          @updatedAt
}

model Speaker {
  bio              String?
  conference       Conference?      @relation(fields: [conferenceId], references: [id])
  conferenceId     String?
  createdAt        DateTime         @default(now())
  id               String           @id @default(cuid())
  name             String?
  speakerSummaries SpeakerSummary[]
  updatedAt        DateTime         @updatedAt
}

model Participant {
  createdAt            DateTime             @default(now())
  id                   String               @id @default(cuid())
  interests            Json?
  participantSummaries ParticipantSummary[]
  questions            Json?
  updatedAt            DateTime             @updatedAt
  user                 User?                @relation(fields: [userId], references: [id])
  userId               String?
}

model ActivitySummary {
  activity   Activity? @relation(fields: [activityId], references: [id])
  activityId String?
  createdAt  DateTime  @default(now())
  embeddings Json?
  id         String    @id @default(cuid())
  summary    String?
  updatedAt  DateTime  @updatedAt
}

model SpeakerSummary {
  createdAt  DateTime @default(now())
  embeddings Json?
  id         String   @id @default(cuid())
  speaker    Speaker? @relation(fields: [speakerId], references: [id])
  speakerId  String?
  summary    String?
  updatedAt  DateTime @updatedAt
}

model User {
  createdAt    DateTime      @default(now())
  email        String?       @unique
  firstName    String?
  id           String        @id @default(cuid())
  lastName     String?
  participants Participant[]
  password     String
  roles        Json
  updatedAt    DateTime      @updatedAt
  username     String        @unique
}
